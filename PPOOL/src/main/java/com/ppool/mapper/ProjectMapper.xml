<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-Mapper.dtd">

<mapper namespace="com.ppool.mapper.ProjectMapper">
<!-- 프로젝트 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->	
	<!-- ***************** 프로젝트 등록 및 수정***************** -->
	<insert id="projectRegister" parameterType="Project">
		<selectKey keyProperty="projectNo" order="AFTER" resultType="int" >
			SELECT PROJECTNO_SEQUENCE.currval FROM DUAL
		</selectKey>
		INSERT INTO PROJECTS
			(PROJECTNO, USERNO, PROJECTTITLE, PROJECTCONTENT, 
			PROJECTTEAMCOUNT, PROJECTSTARTDAY, PROJECTENDDAY, PROJECTEXPIRE,  
			PROJECTSTATUS, PROJECTPHONE, PROJECTEMAIL)
		VALUES
			(PROJECTNO_SEQUENCE.NEXTVAL, #{userNo},#{projectTitle},#{projectContent},
			#{projectTeamCount}, #{projectStartDay}, #{projectEndDay}, #{projectExpire},  
			#{projectStatus}, #{projectPhone},#{projectEmail})
	</insert>
	
	<update id="projectModify" parameterType="Project">
		UPDATE PROJECTS
		SET 
			PROJECTTITLE=#{projectTitle}, PROJECTCONTENT=#{projectContent}, PROJECTTEAMCOUNT=#{projectTeamCount}, PROJECTSTARTDAY=#{projectStartDay}, 
			PROJECTENDDAY=#{projectEndDay}, PROJECTEXPIRE=#{projectExpire},  
			PROJECTSTATUS=#{projectStatus}, PROJECTPHONE=#{projectPhone}, PROJECTEMAIL=#{projectEmail}
		WHERE PROJECTNO=#{projectNo}
	</update>
	
		<!-- 지역 등록 -->
		<insert id="projectLocationRegister" parameterType="hashMap">
			INSERT INTO projectlocation
				(projectlocationno, locationno, projectno)
			VALUES
				(PROJECTLOCATION_SEQUENCE.NEXTVAL, #{locationNo}, #{projectNo})
		</insert>
		<!-- 스킬 등록 -->
		<insert id="projectSkillRegister" parameterType="hashMap">
			INSERT INTO projectskill
				(projectskillno, skillno , projectno)
			VALUES
				(PROJECTSKILL_SEQUENCE.NEXTVAL, #{skillNo}, #{projectNo})
		</insert>
	<!-- ********************************************* -->
	
	<!-- ***************** 프로젝트 리스트 ***************** -->
	<select id="getProjectList" resultType="Project">
		SELECT 
			PROJECTNO, USERNO, PROJECTTITLE, PROJECTCONTENT, PROJECTTEAMCOUNT, 
			PROJECTSTARTDAY, PROJECTENDDAY, PROJECTEXPIRE, PROJECTREGISTERDAY, 
			PROJECTSTATUS, PROJECTPHONE, PROJECTEMAIL
		FROM PROJECTS
		WHERE DELETED='0'
		ORDER BY PROJECTNO DESC
	</select>
	<!-- ********************************************* -->
	
	<!-- ***************** 프로젝트 상세보기 ***************** -->
	<select id="getProjectByProjectNo" resultMap="detailProject">
		SELECT 
			PROJECTNO, USERNO, PROJECTTITLE, PROJECTCONTENT, PROJECTTEAMCOUNT, 
			PROJECTSTARTDAY, PROJECTENDDAY, PROJECTEXPIRE, PROJECTREGISTERDAY, 
			PROJECTSTATUS, PROJECTPHONE, PROJECTEMAIL
		FROM PROJECTS
		WHERE PROJECTNO = #{projectNo} AND DELETED='0'
	</select>
	
	<resultMap id="detailProject" type="Project">
		<id column="projectno" property="projectNo"/>
		<result column="userno" property="userNo"/>
		<result column="projecttitle" property="projectTitle"/>
		<result column="projectcontent" property="projectContent"/>
		<result column="projectteamcount" property="projectTeamCount"/>
		<result column="projectstartday" property="projectStartDay"/>
		<result column="projectendday" property="projectEndDay"/>
		<result column="projectexpire" property="projectExpire"/>
		<result column="projectregisterday" property="projectRegisterDay"/>
		<result column="projectstatus" property="projectStatus"/>
		<result column="projectphone" property="projectPhone"/>
		<result column="projectemail" property="projectEmail"/>
		<association column="userno" property="userName"  select="getUserName"/>
		<collection column="projectno" property="skill" select="getSkillNoByProjectNo"/>
		<collection column="projectno" property="location" select="getLocationNoByProjectNo"/>
		<collection column="projectno" property="comments" select="getCommentsByProjectNo"/>
	</resultMap>
	
	<select id="getUserName" parameterType="int" resultType="String">
		SELECT username
		FROM users
		WHERE userno=#{userno}
	</select>
	
	<select id="getSkillNoByProjectNo" parameterType="int" resultType="String">
		SELECT skillno
		FROM projectskill
		WHERE projectno=#{projectno}
	</select>
	
	<select id="getLocationNoByProjectNo" parameterType="int" resultType="String">
		SELECT locationno
		FROM projectlocation
		WHERE projectno=#{projectno}
	</select>
	
		<!-- ***************** 코멘트 조회 ***************** -->
		<select id="getCommentsByProjectNo" parameterType="int" resultMap="newComment">
			SELECT 
				COMMENTNO, PROJECTNO, USERNO, COMMENTCONTENT, 
				COMMENTGROUPNO, COMMENTDEPTH, COMMENTSTEP, COMMENTCLOSED, COMMENTREGISTERDAY
			FROM COMMENTS
			WHERE projectno=#{projectno}
			ORDER BY COMMENTNO ASC, COMMENTSTEP ASC
		</select>
	<!-- ***************** 프로젝트 상세보기 ***************** -->
	
	<!-- ***************** 프로젝트 삭제 ***************** -->
	<delete id="projectLocationDelete" parameterType="int">
		DELETE FROM projectlocation
		WHERE projectno = #{projectNo}
	</delete>
	<delete id="projectSkillDelete" parameterType="int">
		DELETE FROM projectskill
		WHERE projectno = #{projectNo}
	</delete>
	<update id="projectDelete" parameterType="int">
		UPDATE PROJECTS
		SET deleted='1'
		WHERE projectno = #{projectNo}
	</update>
	
	<!-- ***************** 프로젝트 삭제 ***************** -->
<!-- 프로젝트 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->	
	
	
	
	
<!-- 북마크 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->		
	<!-- ******************프로젝트 북마크 등록*************** -->
	<insert id='projectBookmarks' parameterType='Project'>
	<selectKey keyProperty="projectNo" order="AFTER" resultType="int" >
			SELECT FAVORITEPROJECT_SEQUENCE.currval FROM DUAL
		</selectKey>
		INSERT INTO
		FAVORITEPROJECT(FAVORITENO, USERNO, PROJECTNO)
		VALUES(FAVORITEPROJECT_SEQUENCE.NEXTVAL,#{userNo},#{projectNo})
	</insert>
	<!-- 북마크 목록-->
	<select id="projectBookmarkList" parameterType="int" resultMap="projectResult">
		SELECT 
			FAVORITEPROJECT.FAVORITENO, 
			PROJECTS.PROJECTNO, 
			PROJECTS.PROJECTTITLE, 
			PROJECTS.PROJECTCONTENT, 
			PROJECTS.PROJECTTEAMCOUNT, 
			PROJECTS.PROJECTSTARTDAY, 
			PROJECTS.PROJECTENDDAY, 
			PROJECTS.PROJECTEXPIRE, 
			PROJECTS.PROJECTREGISTERDAY, 
			PROJECTS.PROJECTSTATUS, 
			PROJECTS.PROJECTPHONE, 
			PROJECTS.PROJECTEMAIL
		FROM 
			PROJECTS
		INNER JOIN 
			FAVORITEPROJECT		
		ON
			FAVORITEPROJECT.PROJECTNO = PROJECTS.PROJECTNO
		WHERE 
			FAVORITEPROJECT.USERNO = #{userNo} 
		ORDER BY 
			PROJECTNO DESC
	</select>
	
	<resultMap id ="projectResult" type="Project">
		<id column="projectno" property="projectNo"/>
		<result column="userno" property="userNo"/>
		<result column="projecttitle" property="projectTitle"/>
		<result column="projectcontent" property="projectContent"/>
		<result column="projectteamcount" property="projectTeamCount"/>
		<result column="projectstartday" property="projectStartDay"/>
		<result column="projectendday" property="projectEndDay"/>
		<result column="projectexpire" property="projectExpire"/>
		<result column="projectregisterday" property="projectRegisterDay"/>
		<result column="projectstatus" property="projectStatus"/>
		<result column="projectphone" property="projectPhone"/>
		<result column="projectemail" property="projectEmail"/>
		<!--
		<collection column="projectno" property="favoriteProject" select="getFavoriteNo"/>
		<collection property="favoriteProject" column="projectNo" resultMap="favoriteResult" />
		-->
	</resultMap>
	<!-- <select id="getFavoriteNo" parameterType="int" resultType="String">
		SELECT favoriteno
		FROM favoriteproject
		whehe projectno=#{projectno}
		
	</select>
	<resultMap id ="favoriteResult" type="FavoriteProject">
		<id column="favoriteNo" property="favoriteNo"/>
		
	</resultMap> -->
	<!-- 북마크 중복 체크 -->
	<select id="getBookmarkCount" resultType="int" parameterType="hashmap">
		SELECT count(*) 
		FROM FAVORITEPROJECT
		WHERE userNo=#{userNo} AND projectNo=#{projectNo}
	</select>
	<!-- 북마크 삭제 -->
	<delete id="projectBookmarkDelete" parameterType="int">
		DELETE FROM FAVORITEPROJECT
		WHERE projectNo = #{projectNo}
	</delete>
	<!-- ******************************************************************* -->
<!-- 북마크 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->



<!-- 코멘트 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->	
	<!-- ***************** 코멘트 등록 ***************** -->
	<insert id="commentRegister" parameterType="ProjectComment">
		<selectKey keyProperty="commentNo" order="AFTER" resultType="int" >
			SELECT COMMENTNO_SEQUENCE.CURRVAL FROM DUAL
		</selectKey>
		INSERT INTO COMMENTS
			(COMMENTNO, PROJECTNO, USERNO, COMMENTCONTENT, 
			COMMENTGROUPNO, COMMENTDEPTH, COMMENTSTEP)
		VALUES
			(COMMENTNO_SEQUENCE.NEXTVAL, #{projectNo}, #{userNo}, #{commentContent}, 
			COMMENTNO_SEQUENCE.CURRVAL, 1, 1)
	</insert>
		<!-- ***************** 신규 코멘트 조회 ***************** -->
		<select id="getCommentsByCommentNo" parameterType="int" resultMap="newComment">
			SELECT 
				COMMENTNO, PROJECTNO, USERNO, COMMENTCONTENT, 
				COMMENTGROUPNO, COMMENTDEPTH, COMMENTSTEP, COMMENTCLOSED, COMMENTREGISTERDAY
			FROM COMMENTS
			WHERE commentno=#{commentNo}
		</select>
		
		<resultMap id="newComment" type="ProjectComment">
			<id column="commentno" property="commentNo"/>
			<result column="projectno" property="projectNo"/>
			<result column="userno" property="userNo"/>
			<result column="commentcontent" property="commentContent"/>
			<result column="commentgroupno" property="commentGroupNo"/>
			<result column="commentstep" property="commentStep"/>
			<result column="commentdepth" property="commentDepth"/>
			<result column="commentclosed" property="commentClosed"/>
			<result column="commentregisterday" property="commentRegisterDay"/>
			<association column="userno" property="userName" select="getUserName"/>
		</resultMap>
		<!-- ***************** 신규 코멘트 조회 ***************** -->
	<!-- ***************** 코멘트 등록 ***************** -->
	
	<!-- *************************** 코멘트 삭제 ****************************** -->
	<delete id="commentDelete" parameterType="int">
		DELETE FROM comments
		WHERE commentno = #{commentNo}
	</delete>
	<!-- ******************************************************************* -->
	
	<!-- *************************** 코멘트 수정 ****************************** -->
	<update id="commentUpdate" parameterType="ProjectComment">
		UPDATE comments
		SET commentcontent = #{commentContent}
		WHERE commentno = #{commentNo}
	</update>
	<!-- ******************************************************************* -->

<!-- 코멘트 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->	
	
</mapper>